function [bpvec varargout] = buf_spDecode(spvec, varargin)
% BUF_SPDECODE
% Create a backprojection vector from a sparse buffer vector.
%
% bpvec = buf_spDecode(spvec, [optional arguments])
%
% buf_spDecode() takes a sparse backprojection vector and tries to
% reconstruct the original backprojection vector from it. If a stat_struct
% (generated by buf_spEncode() during the encoding process) is passed in,
% buf_spDecode() will automatically use the parameters supplied in the
% structure during the reconstruction. Alternatively, additional optional
% parameters can be specified as per below:
%
% ARGUMENTS:
% spvec - Sparse vector to decode
% OPTIONAL ARGUMENTS:
% 'stat', struct   - Pass in the string 'stat' followed by a stat_struct
%                    generated during the encoding pass to automatically
%                    attempt reconstrcution from the original
%                    parameters. 
% 'factor', factor - Pass in the string 'factor' followed by the spatial
%                    reduction factor. Legal values are 1, 2, 4, 8. (Default:
%                    2)
% 'anchor', anchor - Pass in the string 'anchor' followed by one of the
%                    following two-letter strings specifying the anchor
%                    point (the point whose value will be place into the
%                    buffer) (Default: 'tl')
%
%                    'tl' - Top Left corner
%                    'tr' - Top right corner
%                    'bl' - Bottom left corner
%                    'br' - Bottom right corner
%                    
%                    Note that this refers to the extreme corner. In the
%                    case of a fac2 encoding, 'bl' will take on the value
%                    of pixel [x+1. y+1]. In a fac8 encoding,, 'bl' will
%                    take on the value of pixel [x+7, y+7]
%
% 'thresh', thresh - Summing threshold for resulting block. (Default: 2).
%                    This value determines how many pixels there must be in
%                    the encoding block before an element of the sparse
%                    vector is genrated. Typical value is 0.5*(fac^2).

% Stefan Wong 2012

	%Set defaults
	fac    = 2;
	anchor = 'tl';
	thresh = 2;

	%Parse input arguments
	if(nargin > 1)
		for k = 1:length(varargin)
			if(ischar(varargin{k}))
				if(strncmpi(varargin{k}, 'stat', 4))
					stat_struct = varargin{k+1};
				elseif(strncmpi(varargin{k}, 'factor', 6))
					fac = varargin{k+1};
				elseif(strncmpi(varargin{k}, 'thresh', 6))
					thresh = varargin{k+1};
				elseif(strncmpi(varargin{k+1}, 'anchor', 6))
					anchor = varargin{k+1};
				end
			end
		end
	end
	
	%Calculat
	
	%Overwrite values with stat_struct values, if it exists
	if(exist('stat_struct', 'var'))
		anchor = stat_struct.anchor;
		thresh = stat_struct.thresh;
		fac    = stat_struct.fac;
		bpsz   = stat_struct.bpsz;
	end
	
	


end		%buf_spDecode()