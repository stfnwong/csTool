function [tracker flags] = f_tstTracker(varargin)
% F_TSTTRACKER
% 
% Functional equivalent of tst_genTracker. 
% [tracker flags] = f_tstTracker(...)
%
% ARGUMENTS:
% If no arguments are specified, a csTracker object is returned using the default 
% arguments below
%
% track_opts  = struct('method',     1, ...
%						 'verbose',    1, ...
%						 'rotMatrix',  1, ...
%						 'fparams',    [], ...
%						 'cordicMode', 0, ...
%						 'bpThresh',   0, ...
%						 'fixedIter',  1, ...
%						 'maxIter',    2, ...
%						 'epsilon',    0);
%
% 'opts', opts - Pass the string 'opts' followed by an options strucure for csTracker.
%                Options passed this way will override the defaults.
%

% Stefan Wong 2012

	%Parse optional arguments (if any)
	if(nargin > 0)
		if(strncmpi(varargin{1}, 'opts', 4))
			if(~isa(varargin{2}, 'struct'))
				fprintf('Bad argument in opts (not a valid struct), ignoring...\n');
			else
				opts = varargin{2};
			end
		end
	end

	if(~exist('opts', 'var'))
		opts  = struct('method',     1, ...
					   'verbose',    1, ...
					   'rotMatrix',  1, ...
					   'fparams',    [], ...
					   'cordicMode', 0, ...
					   'bpThresh',   0, ...
					   'fixedIter',  1, ...
					   'maxIter',    2, ...
					   'epsilon',    0);
	end
	tracker = csTracker(opts);
	flags   = 0;		%not yet implemented

end 	%f_tstTracker()
